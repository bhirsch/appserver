<?php
/**
 * @file
 * Code for the App Server feature.
 */

include_once('appserver.features.inc');

/**
 * Implements hook_menu().
 */
function appserver_menu() {
  $items = array();

  $items['appserver/%node/make'] = array(
    'page callback' => 'appserver_make_page',
    'page arguments' => array(1, 3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'appserver.pages.inc',
  );
  $items['appserver/listview'] = array(
    'page callback' => 'appserver_listview_page',
    'access arguments' => array('access content'),
    'file' => 'appserver.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function appserver_form_app_node_form_alter(&$form, &$form_state, $form_id) {
  $form['#submit'][] = 'appserver_make_app';
dsm($form, 'Note: appserver_make_app is being called on submit. This is just for development.');
}

/**
 * Wrapper for _appserver_make_app() in appserver.make.inc.
 * 
 * @param $nid
 *  App node id.
 * 
 * @return
 *  $result array returned by _appserver_make_app.
 *  array('success' => TRUE/FALSE, 'message' => $text);
 */
function appserver_make_app($nid = NULL) {
  // If no nid is passed, look for it in path.
  if (!$nid || !is_numeric($nid)) {
    $arg1 = arg(1);
    if ($arg1 == 'add') {
      // @todo Revisit.
      drupal_set_message('appserver_make_app only runs when saving existing nodes. '
                       . 'temp. This may only run on submit for development anyway.');
      return;
    }
    else if (is_numeric($arg1)) {
      // $arg1 is a node id.
      $nid = $arg1;
    }
  }
  module_load_include('inc', 'appserver', 'appserver.make');
  $result = _appserver_make_app($nid); 
  if ($result['success'] == TRUE) {
    drupal_set_message(t('Success'), 'status');
    drupal_set_message(check_markup($result['message']));
  }
  else {
    drupal_set_message(t('Failure'), 'error');
    drupal_set_message(check_markup($result['message']), 'error');
  }

  return $result;
}
